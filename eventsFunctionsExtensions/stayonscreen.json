{
  "author": "@4ian",
  "description": "Force the object to stay visible on the screen by setting back its position inside the viewport of the camera.",
  "extensionNamespace": "",
  "fullName": "Stay On Screen",
  "name": "StayOnScreen",
  "shortDescription": "Force the object to stay visible on the screen by setting back its position inside the viewport of the camera.",
  "tags": "positioning, camera, screen",
  "version": "0.0.1",
  "eventsFunctions": [],
  "eventsBasedBehaviors": [
    {
      "description": "Force the object to stay visible on the screen by setting back its position inside the viewport of the camera.",
      "fullName": "Stay on Screen",
      "name": "StayOnScreen",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPostEvents",
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "min(max(Object.X(), CameraX(Object.Layer(), 0) - CameraWidth(Object.Layer(), 0)/2 + Object.Behavior::PropertyMarginLeft()), CameraX(Object.Layer(), 0) + CameraWidth(Object.Layer(), 0)/2 - Object.Behavior::PropertyMarginRight())"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "min(max(Object.Y(), CameraY(Object.Layer(), 0) - CameraHeight(Object.Layer(), 0)/2+ Object.Behavior::PropertyMarginTop()), CameraY(Object.Layer(), 0) + CameraHeight(Object.Layer(), 0)/2- Object.Behavior::PropertyMarginBottom())"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "StayOnScreen::StayOnScreen",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "0",
          "type": "Number",
          "label": "Top margin, in pixels",
          "description": "",
          "extraInformation": [],
          "hidden": false,
          "name": "MarginTop"
        },
        {
          "value": "0",
          "type": "Number",
          "label": "Bottom margin, in pixels",
          "description": "",
          "extraInformation": [],
          "hidden": false,
          "name": "MarginBottom"
        },
        {
          "value": "0",
          "type": "Number",
          "label": "Left margin, in pixels",
          "description": "",
          "extraInformation": [],
          "hidden": false,
          "name": "MarginLeft"
        },
        {
          "value": "0",
          "type": "Number",
          "label": "Right margin, in pixels",
          "description": "",
          "extraInformation": [],
          "hidden": false,
          "name": "MarginRight"
        }
      ]
    }
  ]
}